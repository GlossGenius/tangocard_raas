=begin
#Tango Card RaaS API

#<p>Welcome to the RaaS&reg; API â€“ with this RESTful API you can integrate a global reward or incentive program into your app or platform.<br /><br /> This console works in our Sandbox environment. To receive your own credentials or to ask questions, please contact us at <a href=\"mailto:devsupport@tangocard.com\">devsupport@tangocard.com</a>.

The version of the OpenAPI document: 2

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.2-SNAPSHOT

=end

require 'cgi'

module TangocardRaas
  class CustomersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new Customer on this Platform.
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCustomerCriteria] :form &lt;strong&gt;displayName&lt;/strong&gt; - a friendly name for this customer &lt;br /&gt;&lt;br /&gt;&lt;strong&gt;customerIdentifier&lt;/strong&gt; - an official identifier for this customer. This identifier needs to be lowercase if alphabetic characters are used.
    # @return [CustomerViewNew]
    def create_customer(opts = {})
      data, _status_code, _headers = create_customer_with_http_info(opts)
      data
    end

    # Create a new Customer on this Platform.
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCustomerCriteria] :form &lt;strong&gt;displayName&lt;/strong&gt; - a friendly name for this customer &lt;br /&gt;&lt;br /&gt;&lt;strong&gt;customerIdentifier&lt;/strong&gt; - an official identifier for this customer. This identifier needs to be lowercase if alphabetic characters are used.
    # @return [Array<(CustomerViewNew, Integer, Hash)>] CustomerViewNew data, response status code and response headers
    def create_customer_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomersApi.create_customer ...'
      end
      # resource path
      local_var_path = '/customers'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'form']) 

      # return_type
      return_type = opts[:return_type] || 'CustomerViewNew' 

      # auth_names
      auth_names = opts[:auth_names] || ['basicAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomersApi#create_customer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create an Account under a specific Customer on this Platform.
    # @param customer_identifier [String] The customerIdentifier for the Customer under which you are creating a new account
    # @param [Hash] opts the optional parameters
    # @option opts [CreateAccountCriteria] :account_criteria &lt;strong&gt;contactEmail&lt;/strong&gt; - An email address for a designated representative for this account.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;displayName&lt;/strong&gt; - A friendly name for this account&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;identifier&lt;/strong&gt; - A unique identifier for this account. This identifier must be lowercase if alphabetic characters are used.
    # @return [AccountView]
    def create_customer_account(customer_identifier, opts = {})
      data, _status_code, _headers = create_customer_account_with_http_info(customer_identifier, opts)
      data
    end

    # Create an Account under a specific Customer on this Platform.
    # @param customer_identifier [String] The customerIdentifier for the Customer under which you are creating a new account
    # @param [Hash] opts the optional parameters
    # @option opts [CreateAccountCriteria] :account_criteria &lt;strong&gt;contactEmail&lt;/strong&gt; - An email address for a designated representative for this account.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;displayName&lt;/strong&gt; - A friendly name for this account&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;identifier&lt;/strong&gt; - A unique identifier for this account. This identifier must be lowercase if alphabetic characters are used.
    # @return [Array<(AccountView, Integer, Hash)>] AccountView data, response status code and response headers
    def create_customer_account_with_http_info(customer_identifier, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomersApi.create_customer_account ...'
      end
      # verify the required parameter 'customer_identifier' is set
      if @api_client.config.client_side_validation && customer_identifier.nil?
        fail ArgumentError, "Missing the required parameter 'customer_identifier' when calling CustomersApi.create_customer_account"
      end
      # resource path
      local_var_path = '/customers/{customerIdentifier}/accounts'.sub('{' + 'customerIdentifier' + '}', CGI.escape(customer_identifier.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'account_criteria']) 

      # return_type
      return_type = opts[:return_type] || 'AccountView' 

      # auth_names
      auth_names = opts[:auth_names] || ['basicAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomersApi#create_customer_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get details for a specific Customer on this Platform.
    # @param customer_identifier [String] customerIdentifier
    # @param [Hash] opts the optional parameters
    # @return [CustomerViewSummary]
    def get_customer(customer_identifier, opts = {})
      data, _status_code, _headers = get_customer_with_http_info(customer_identifier, opts)
      data
    end

    # Get details for a specific Customer on this Platform.
    # @param customer_identifier [String] customerIdentifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(CustomerViewSummary, Integer, Hash)>] CustomerViewSummary data, response status code and response headers
    def get_customer_with_http_info(customer_identifier, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomersApi.get_customer ...'
      end
      # verify the required parameter 'customer_identifier' is set
      if @api_client.config.client_side_validation && customer_identifier.nil?
        fail ArgumentError, "Missing the required parameter 'customer_identifier' when calling CustomersApi.get_customer"
      end
      # resource path
      local_var_path = '/customers/{customerIdentifier}'.sub('{' + 'customerIdentifier' + '}', CGI.escape(customer_identifier.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'CustomerViewSummary' 

      # auth_names
      auth_names = opts[:auth_names] || ['basicAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomersApi#get_customer\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a list of all Accounts created for a specific Customer on this Platform.
    # @param customer_identifier [String] customerIdentifier
    # @param [Hash] opts the optional parameters
    # @return [AccountViewSummary]
    def list_customer_accounts1(customer_identifier, opts = {})
      data, _status_code, _headers = list_customer_accounts1_with_http_info(customer_identifier, opts)
      data
    end

    # Get a list of all Accounts created for a specific Customer on this Platform.
    # @param customer_identifier [String] customerIdentifier
    # @param [Hash] opts the optional parameters
    # @return [Array<(AccountViewSummary, Integer, Hash)>] AccountViewSummary data, response status code and response headers
    def list_customer_accounts1_with_http_info(customer_identifier, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomersApi.list_customer_accounts1 ...'
      end
      # verify the required parameter 'customer_identifier' is set
      if @api_client.config.client_side_validation && customer_identifier.nil?
        fail ArgumentError, "Missing the required parameter 'customer_identifier' when calling CustomersApi.list_customer_accounts1"
      end
      # resource path
      local_var_path = '/customers/{customerIdentifier}/accounts'.sub('{' + 'customerIdentifier' + '}', CGI.escape(customer_identifier.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'AccountViewSummary' 

      # auth_names
      auth_names = opts[:auth_names] || ['basicAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomersApi#list_customer_accounts1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a list of all Customers on this Platform.
    # @param [Hash] opts the optional parameters
    # @return [CustomerViewSummary]
    def list_customers(opts = {})
      data, _status_code, _headers = list_customers_with_http_info(opts)
      data
    end

    # Get a list of all Customers on this Platform.
    # @param [Hash] opts the optional parameters
    # @return [Array<(CustomerViewSummary, Integer, Hash)>] CustomerViewSummary data, response status code and response headers
    def list_customers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomersApi.list_customers ...'
      end
      # resource path
      local_var_path = '/customers'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      # return_type
      return_type = opts[:return_type] || 'CustomerViewSummary' 

      # auth_names
      auth_names = opts[:auth_names] || ['basicAuth']

      new_options = opts.merge(
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomersApi#list_customers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
